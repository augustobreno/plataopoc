<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>br.jus.trt.app</groupId>
    <artifactId>platao</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>platao application</name>

    <modules>
        <module>plataoear-ejb</module>
        <module>plataoear-web</module>
        <module>plataoear-ear</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <trtcommon.version>0.0.1-SNAPSHOT</trtcommon.version>
        <!-- Variável utilizada para configurar o ProjectStage do DeltaSpike.
        Pode ser modificada em um profile específico. -->
        <ambiente>Development</ambiente>
        <log4j2.version>2.0.2</log4j2.version>
        <log4j2.level>ALL</log4j2.level>
    </properties>

    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>br.jus.trt.lib</groupId>
                <artifactId>common-web</artifactId>
                <version>${trtcommon.version}</version>
            </dependency>

            <dependency>
                <groupId>br.jus.trt.lib</groupId>
                <artifactId>common-core</artifactId>
                <version>${trtcommon.version}</version>
            </dependency>

            <!-- Define the version of the EJB jar so that we don't need to repeat 
            ourselves in every module -->
            <dependency>
                <groupId>br.jus.trt.app</groupId>
                <artifactId>platao-ejb</artifactId>
                <version>${project.version}</version>
                <type>ejb</type>
            </dependency>
                        
            <!-- Define the version of the WAR so that we don't need to repeat ourselves 
            in every module -->
            <dependency>
                <groupId>br.jus.trt.app</groupId>
                <artifactId>platao-web</artifactId>
                <version>${project.version}</version>
                <type>war</type>
                <scope>compile</scope>
            </dependency>

            <!-- Define the version of JBoss' Java EE 6 APIs we want to import. Any 
            dependencies from org.jboss.spec will have their version defined by this 
            BOM -->
            <!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill 
            of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
            of artifacts. We use this here so that we always get the correct versions 
            of artifacts. Here we use the jboss-javaee-web-6.0 stack (you can read this 
            as the JBoss stack of the Java EE Web Profile 6 APIs), and we use version 
            2.0.0.Beta1 which is the latest release of the stack. You can actually use 
            this stack with any version of JBoss AS that implements Java EE 6, not just 
            JBoss AS 7! -->
            <dependency>
                <groupId>org.jboss.spec</groupId>
                <artifactId>jboss-javaee-web-6.0</artifactId>
                <version>2.0.0.Final</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- JSR-303 (Bean Validation) Implementation -->
            <!-- Provides portable constraints such as @Email -->
            <!-- Hibernate Validator is shipped in JBoss AS 7 -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>4.1.0.Final</version>
                <scope>provided</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.sun.faces</groupId>
                <artifactId>jsf-api</artifactId>
                <version>2.2.0</version>
                <scope>provided</scope>
            </dependency>
			
            <!-- Test dependencies -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.10</version>
                <type>jar</type>
                <scope>test</scope>
            </dependency>

            <!-- Log4j2 -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
                        
            <!-- Log4j2 bridges -->
            <!-- Log4j-->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-1.2-api</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
                        
            <!-- Commons-logging -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-jcl</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
                        
            <!-- slfj -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
                        
            <!-- Web servlet support -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-web</artifactId>
                <version>${log4j2.version}</version>
                <scope>runtime</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.4.3</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <!-- Compiler plugin enforces Java 1.6 compatibility and activates annotation 
            processors -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <!-- The JBoss AS plugin deploys your ear to a local JBoss AS container -->
            <!-- Due to Maven's lack of intelligence with EARs we need to configure 
            the jboss-as maven plugin to skip deployment for all modules. We then enable 
            it specifically in the ear module. -->
            <plugin>
                <groupId>org.jboss.as.plugins</groupId>
                <artifactId>jboss-as-maven-plugin</artifactId>
                <version>7.0.2.Final</version>
                <inherited>true</inherited>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
