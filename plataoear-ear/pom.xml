<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <artifactId>platao</artifactId>
      <groupId>br.jus.trt.app</groupId>
      <version>0.0.1-SNAPSHOT</version>
   </parent>

   <artifactId>platao-ear</artifactId>
   <packaging>ear</packaging>

   <name>platao EAR module</name>

   <dependencies>

      <!-- Depend on the ejb module and war so that we can package them -->
      <dependency>
         <groupId>br.jus.trt.app</groupId>
         <artifactId>platao-web</artifactId>
         <type>war</type>
      </dependency>
      <dependency>
         <groupId>br.jus.trt.app</groupId>
         <artifactId>platao-ejb</artifactId>
         <type>ejb</type>
      </dependency>
   </dependencies>

   <build>
      <finalName>platao</finalName>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-ear-plugin</artifactId>
            <version>2.9.1</version>
            <configuration>
               <!-- Tell Maven we are using Java EE 7 -->
               <version>7</version>
               <!-- Use Java EE ear libraries as needed. Java EE ear libraries 
                  are in easy way to package any libraries needed in the ear, and automatically 
                  have any modules (EJB-JARs and WARs) use them -->
               <defaultLibBundleDir>lib</defaultLibBundleDir>
               <filtering>true</filtering>
               <modules>
                  <!-- Register our War as a web module, and set the context 
                     root -->
                  <webModule>
                     <groupId>br.jus.trt.app</groupId>
                     <artifactId>platao-web</artifactId>
                     <!-- Define the context root for the webapp -->
                     <contextRoot>/platao</contextRoot>
                  </webModule>
               </modules>
            </configuration>
         </plugin>
         <!-- The JBoss AS plugin deploys your ear to a local JBoss AS container -->
         <!-- Due to Maven's lack of intelligence with EARs we need to configure 
            the jboss-as maven plugin to skip deployment for all modules. We then enable 
            it specifically in the ear module. -->
         <plugin>
            <groupId>org.jboss.as.plugins</groupId>
            <artifactId>jboss-as-maven-plugin</artifactId>
            <configuration>
               <skip>false</skip>
            </configuration>
         </plugin>
      </plugins>
   </build>
   
   <profiles>
       
       <!--
        ! Profiles de deploy
        !
        ! Estes profiles servem para executar deploy em servidores jboss e wildfly.
        ! Eles contam com propriedades não definidas neste arquivo. Elas devem ser
        ! definidas no arquivo settings.xml de cada desenvolvedor. Isto permite que
        ! as configurações sejam personalizadas, sem que dados sigilosos sejam
        ! colocados no repositório de versionamento.
        !
        ! Recomenda-se que seja criado um profile para cada servidor de aplicação
        ! e que o profile adequado seja habilitado no momento do deploy. Por exemplo:
        ! localhost-jboss-eap-6.3 ou remoto-jboss-eap-6.1 e que cada um desses
        ! profiles tenha as propriedades adequadas.
        -->
       <profile>
           <id>deploy-to-jboss</id>
           
           <build>
               <plugins>
                   <plugin>
                       <groupId>org.jboss.as.plugins</groupId>
                       <artifactId>jboss-as-maven-plugin</artifactId>
                       <version>7.6.Final</version>
                       
                       <executions>
                           <execution>
                               <id>deploy-to-jboss-exec</id>
                               <phase>install</phase>
                               <goals>
                                   <goal>deploy</goal>
                               </goals>
                           </execution>
                       </executions>
                       
                       <configuration>
                           <force>true</force>
                           <deployEnabled>true</deployEnabled>
                           <!-- Identifica as credenciais utilizadas para fazer login no servidor -->
                           <hostname>${appserver.hostname}</hostname>
                           <port>${appserver.port}</port>
                           <username>${appserver.username}</username>
                           <password>${appserver.password}</password>
                       </configuration>
                   </plugin>
               </plugins>
           </build>
       </profile>
       <profile>
           <id>deploy-to-wildfly</id>
           
           <build>
               <plugins>
                   <plugin>
                       <groupId>org.wildfly.plugins</groupId>
                       <artifactId>wildfly-maven-plugin</artifactId>
                       <version>1.0.2.Final</version>
                       
                       <executions>
                           <execution>
                               <id>deploy-to-wiildfly-exec</id>
                               <phase>install</phase>
                               <goals>
                                   <goal>deploy</goal>
                               </goals>
                           </execution>
                       </executions>
                       
                       <configuration>
                           <force>true</force>
                           <!-- Identifica as credenciais utilizadas para fazer login no servidor -->
                           <hostname>${appserver.hostname}</hostname>
                           <port>${appserver.port}</port>
                           <username>${appserver.username}</username>
                           <password>${appserver.password}</password>
                       </configuration>
                   </plugin>
               </plugins>
           </build>
       </profile>
   </profiles>

</project>
